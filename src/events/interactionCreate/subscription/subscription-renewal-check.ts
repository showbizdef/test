import type { CommandKit } from "commandkit";
import { ButtonComponent, EmbedBuilder, type Client, type Interaction } from "discord.js";

import Subscription from "@schemas/Subscription";

import { COMPANY_OWNER_ROLE_ID } from "@constants/roles";

import { hasRole } from "@utils/roles/hasRole";
import { disableButtons } from "@utils/disable-buttons";
import { updateSubscriptionMessage } from "@utils/subscription/updateSubscriptionMessage";

export default async function (interaction: Interaction, client: Client<true>, handler: CommandKit) {
  if (!interaction.isButton()) return;
  if (!interaction.inCachedGuild()) return;

  switch (interaction.customId) {
    case "subs-renewal-approve": {
      if (!hasRole(interaction, COMPANY_OWNER_ROLE_ID))
        return interaction.reply({ content: "üî¥ –£ –í–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞.", ephemeral: true });

      const message = interaction.message;
      const receivedEmbed = message.embeds[0];

      const userId = receivedEmbed.footer?.text!;
      const messageButtons = message.components[0].components as ButtonComponent[];

      await Subscription.findOne({ userId })
        .then((document) => {
          if (!document) throw new Error("üî¥ –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.");

          // –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–ø–∏—Å–∫–∏
          document.subscriptionStatus = "–ø—Ä–æ–¥–ª–µ–Ω–∞";

          // —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞
          document
            .save()
            .then((savedDocument) => {
              // –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å–æ–æ–±—â–µ–Ω–∏—è
              const updatedRow = disableButtons(messageButtons);
              const newEmbed = new EmbedBuilder()
                .setTitle("‚úÖ –ó–∞–ø—Ä–æ—Å –Ω–∞ –ø—Ä–æ–¥–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ –æ–¥–æ–±—Ä–µ–Ω")
                .setDescription(
                  `–ó–∞–ø—Ä–æ—Å –Ω–∞ –ø—Ä–æ–¥–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ –∏–≥—Ä–æ–∫–∞ <@${savedDocument.userId}> –±—ã–ª —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω –∏ –æ–¥–æ–±—Ä–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ${interaction.member.user}.`
                )
                .setTimestamp()
                .setFooter({
                  text: interaction.client.user.username,
                  iconURL: interaction.client.user.displayAvatarURL(),
                });

              // –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–æ–≤—ã–º–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏
              interaction.update({
                embeds: [receivedEmbed, newEmbed],
                components: [updatedRow],
              });

              // —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–∞ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
              interaction.client.users.send(userId, {
                embeds: [
                  new EmbedBuilder()
                    .setTitle("‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –ø—Ä–æ–¥–ª–µ–Ω–∞")
                    .setDescription(
                      "–í–∞—à–∞ –µ–∂–µ–º–µ—Å—è—á–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–¥–ª–µ–Ω–∞. –ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ —Ç–æ, —á—Ç–æ –æ—Å—Ç–∞—ë—Ç–µ—Å—å —Å –Ω–∞–º–∏! üíñ"
                    )
                    .setTimestamp()
                    .setFooter({
                      text: interaction.client.user.username,
                      iconURL: interaction.client.user.displayAvatarURL(),
                    }),
                ],
              });

              // –∞–ø–¥–µ–π—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å–æ —Å–ø–∏—Å–∫–æ–º –ø–æ–¥–ø–∏—Å–æ–∫
              updateSubscriptionMessage(interaction);
            })
            .catch((error) => {
              return interaction.reply({ content: `${error.message}`, ephemeral: true });
            });
        })
        .catch((error) => {
          return interaction.reply({ content: `${error.message}`, ephemeral: true });
        });

      break;
    }
    case "subs-renewal-deny": {
      if (!hasRole(interaction, COMPANY_OWNER_ROLE_ID))
        return interaction.reply({ content: "üî¥ –£ –í–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞.", ephemeral: true });

      const message = interaction.message;
      const receivedEmbed = message.embeds[0];

      const userId = receivedEmbed.footer?.text!;
      const messageButtons = message.components[0].components as ButtonComponent[];

      // –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å–æ–æ–±—â–µ–Ω–∏—è
      const updatedRow = disableButtons(messageButtons);
      const newEmbed = new EmbedBuilder()
        .setTitle("‚ùé –ó–∞–ø—Ä–æ—Å –Ω–∞ –ø—Ä–æ–¥–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ –æ—Ç–∫–ª–æ–Ω—ë–Ω")
        .setDescription(
          `–ó–∞–ø—Ä–æ—Å –Ω–∞ –ø—Ä–æ–¥–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ –∏–≥—Ä–æ–∫–∞ <@${userId}> –±—ã–ª —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω –∏ –æ—Ç–∫–ª–æ–Ω—ë–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ${interaction.member.user}.`
        )
        .setTimestamp()
        .setFooter({
          text: interaction.client.user.username,
          iconURL: interaction.client.user.displayAvatarURL(),
        });

      // –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–æ–≤—ã–º–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏
      interaction.update({
        embeds: [receivedEmbed, newEmbed],
        components: [updatedRow],
      });

      // —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–∞ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
      interaction.client.users.send(userId, {
        embeds: [
          new EmbedBuilder()
            .setTitle("‚ùé –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–µ –ø—Ä–æ–¥–ª–µ–Ω–∞")
            .setDescription(
              "–í–∞—à –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø—Ä–æ–¥–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ –±—ã–ª –æ—Ç–∫–ª–æ–Ω—ë–Ω. –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –∏ –ø—Ä–∏—á–∏–Ω—É –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è —É–∑–Ω–∞–≤–∞–π—Ç–µ —É –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤."
            )
            .setTimestamp()
            .setFooter({
              text: interaction.client.user.username,
              iconURL: interaction.client.user.displayAvatarURL(),
            }),
        ],
      });

      break;
    }
    case "subs-renewal-close": {
      if (!hasRole(interaction, COMPANY_OWNER_ROLE_ID))
        return interaction.reply({ content: "üî¥ –£ –í–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞.", ephemeral: true });

      const message = interaction.message;
      const receivedEmbed = message.embeds[0];

      const userId = receivedEmbed.footer?.text!;
      const messageButtons = message.components[0].components as ButtonComponent[];

      // –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å–æ–æ–±—â–µ–Ω–∏—è
      const updatedRow = disableButtons(messageButtons);
      const newEmbed = new EmbedBuilder()
        .setTitle("‚õî –ó–∞–ø—Ä–æ—Å –Ω–∞ –ø—Ä–æ–¥–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ –∑–∞–∫—Ä—ã—Ç")
        .setDescription(
          `–ó–∞–ø—Ä–æ—Å –Ω–∞ –ø—Ä–æ–¥–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ –∏–≥—Ä–æ–∫–∞ <@${userId}> –±—ã–ª –∑–∞–∫—Ä—ã—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ${interaction.member.user}.`
        )
        .setTimestamp()
        .setFooter({
          text: interaction.client.user.username,
          iconURL: interaction.client.user.displayAvatarURL(),
        });

      // –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–æ–≤—ã–º–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏
      interaction.update({
        embeds: [receivedEmbed, newEmbed],
        components: [updatedRow],
      });

      break;
    }
  }
}
