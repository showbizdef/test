import { CommandKit } from "commandkit";
import {
  EmbedBuilder,
  TextChannel,
  ButtonBuilder,
  ActionRowBuilder,
  ButtonStyle,
  type Client,
  type Interaction,
} from "discord.js";

import Configuration from "@schemas/Configuration";

import { COMPANY_OWNER_ROLE_ID } from "@constants/roles";

export default async function (interaction: Interaction, client: Client<true>, handler: CommandKit) {
  if (!interaction.isModalSubmit()) return;
  if (!interaction.inCachedGuild()) return;

  switch (interaction.customId) {
    case "subscription-renewal-modal": {
      await interaction.deferReply({ ephemeral: true });

      // –ø–æ–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
      const nickname = interaction.fields.getTextInputValue("renewal-nickname-input");
      const screenshotURL = interaction.fields.getTextInputValue("renewal-payment-input");

      // –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ —Å—Å—ã–ª–∫–∏
      if (!screenshotURL.startsWith("https://imgur.com/")) {
        return interaction.editReply("üî¥ –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å—Å—ã–ª–∫–∏.");
      }

      await Configuration.findOne({ guildId: interaction.guild.id })
        .then((document) => {
          if (!document) throw new Error(`üî¥ –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.`);
          if (!document.subscriptionRenewalCheckChannelId)
            throw new Error(
              `üî¥ –ö–∞–Ω–∞–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞—è–≤–æ–∫ –Ω–∞ –ø—Ä–æ–¥–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π </systems subscription setup:1162424704120934481>.`
            );

          const subscriptionRenewalCheckChannelId = document.subscriptionRenewalCheckChannelId;
          const subscriptionRenewalCheckChannel = interaction.guild.channels.cache.get(
            subscriptionRenewalCheckChannelId
          )! as TextChannel;

          // –µ–º–±–µ–¥ –ø—Ä–æ–¥–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏
          const renewalRequestEmbed = new EmbedBuilder()
            .setTitle(`üíµ –ü—Ä–æ–¥–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ –∏–≥—Ä–æ–∫–∞ ${nickname}`)
            .setDescription(
              `–ò–≥—Ä–æ–∫ ${interaction.member.user} –ø—Ä–æ–¥–ª–µ–≤–∞–µ—Ç –µ–∂–µ–º–µ—Å—è—á–Ω—É—é –ø–æ–¥–ø–∏—Å–∫—É, –ø—Ä–∏–ª–æ–∂–∏–≤ —Å–∫—Ä–∏–Ω—à–æ—Ç –æ–ø–ª–∞—Ç—ã. –¢—â–∞—Ç–µ–ª—å–Ω–æ —Ä–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –µ–≥–æ –∑–∞—è–≤–∫—É –∏ –ø—Ä–∏–º–∏—Ç–µ —Ä–µ—à–µ–Ω–∏–µ, –Ω–∞–∂–∞–≤ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É, –ø—Ä–∏–∫—Ä–µ–ø–ª—ë–Ω–Ω—É—é –∫ —Å–æ–æ–±—â–µ–Ω–∏—é.`
            )
            .setTimestamp()
            .setFooter({
              text: interaction.member.user.id,
              iconURL: interaction.member.user.displayAvatarURL(),
            });

          // –µ–º–±–µ–¥ –æ—Ç–≤–µ—Ç–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏
          const renewalRequestResponseEmbed = new EmbedBuilder()
            .setTitle("‚úÖ –ó–∞—è–≤–∫–∞ –Ω–∞ –ø—Ä–æ–¥–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞")
            .setDescription(
              `–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –±—É–¥–µ—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∞ –≤ –∫—Ä–∞—Ç—á–∞–π—à–∏–µ —Å—Ä–æ–∫–∏. –ö–∞–∫ —Ç–æ–ª—å–∫–æ –æ–Ω–∞ –±—É–¥–µ—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∞, –í–∞–º –ø—Ä–∏–¥—ë—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç ${interaction.client.user}.`
            )
            .setTimestamp()
            .setFooter({
              text: interaction.client.user.username,
              iconURL: interaction.client.user.displayAvatarURL(),
            });

          // –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞—è–≤–∫–∏ –Ω–∞ –ø—Ä–æ–¥–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏
          const renewalRequestRow = new ActionRowBuilder<ButtonBuilder>().addComponents(
            new ButtonBuilder()
              .setURL(screenshotURL)
              .setLabel("–°–∫—Ä–∏–Ω—à–æ—Ç –æ–ø–ª–∞—Ç—ã")
              .setEmoji("üñºÔ∏è")
              .setStyle(ButtonStyle.Link),
            new ButtonBuilder()
              .setCustomId("subs-renewal-approve")
              .setLabel("–ü—Ä–æ–¥–ª–∏—Ç—å")
              .setEmoji("‚úÖ")
              .setStyle(ButtonStyle.Secondary),
            new ButtonBuilder()
              .setCustomId("subs-renewal-deny")
              .setLabel("–ù–µ –ø—Ä–æ–¥–ª–µ–≤–∞—Ç—å")
              .setEmoji("‚ùé")
              .setStyle(ButtonStyle.Secondary),
            new ButtonBuilder()
              .setCustomId("subs-renewal-close")
              .setLabel("–ó–∞–∫—Ä—ã—Ç—å")
              .setEmoji("‚õî")
              .setStyle(ButtonStyle.Secondary)
          );

          subscriptionRenewalCheckChannel.send({
            content: `<@&${COMPANY_OWNER_ROLE_ID}>`,
            embeds: [renewalRequestEmbed],
            components: [renewalRequestRow],
          });

          interaction.editReply({ embeds: [renewalRequestResponseEmbed] });
        })
        .catch((error) => interaction.editReply(error.message));

      break;
    }
  }
}
